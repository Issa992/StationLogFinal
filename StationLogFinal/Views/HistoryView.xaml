<Page
    x:Class="StationLogFinal.Views.HistoryView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:StationLogFinal.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <RelativePanel>
        <RelativePanel.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF969696"/>
                <GradientStop Color="White" Offset="1"/>
            </LinearGradientBrush>
        </RelativePanel.Background>

        <CommandBar x:Name="MyCommandBar"  OverflowButtonVisibility="Collapsed"  IsOpen="True" IsSticky="True" ClosedDisplayMode="Compact"
                    Height="55" Margin="0,55,0,0" RelativePanel.AlignLeftWithPanel="True" 
                    RelativePanel.AlignRightWithPanel="True"  >




            <CommandBar.Content>
                <RelativePanel>
                    <StackPanel Orientation="Horizontal">

                        <AppBarButton  x:Name="HomeButton" Icon="Home" Label="Home"  Click="NavigateToHomeView" Width="185" />
                        <AppBarButton x:Name="TasksButton" Icon="Paste"  Label="Tasks" Click="NavigateToTaskView" Width="185"
                        />

                        <AppBarSeparator RelativePanel.RightOf="TasksButton"/>
                        <AppBarButton x:Name="HistoryButton" Icon="PostUpdate" Label="History"  Click="NavigateToHistoryView"
                                      Width="185"
                        />
                        <AppBarButton x:Name="CommentButton" Icon="Comment" Label="Comments" Click="NavigateToCommentsView"  Width="185"
                        />
                        <AppBarButton  Click="NavigateToLoginPage" Icon="Back" Label="LogOut"  Width="185"></AppBarButton>


                    </StackPanel>


                </RelativePanel>

            </CommandBar.Content>
        </CommandBar>
        <ScrollViewer x:Name="MyScrollViewer"  VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" 
                       HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled"   
                       RelativePanel.Below="MyCommandBar"
                       RelativePanel.AlignRightWithPanel="True" 
                       RelativePanel.AlignLeftWithPanel="True"  
                       RelativePanel.AlignHorizontalCenterWithPanel="True">
            <RelativePanel>

                <ListView RelativePanel.AlignVerticalCenterWithPanel="True"     RelativePanel.AlignHorizontalCenterWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True" 
                      RelativePanel.AlignLeftWithPanel="True"
                      Margin="5"  x:Name="MyListView" 
                      Height="421" Width="900">
                    <StackPanel Padding="33" Width="663">
                    
                        
                        

                        <Border Padding="10">
                            <Button FontSize="20" Padding="10" Content="21/01/2018" HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>

                        <Border Padding="10">
                            <Button FontSize="20" Padding="10" Content="20/01/2018" HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>

                        <Border Padding="10">
                            <Button FontSize="20" Padding="10" Content="19/01/2018" HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>

                        <Border Padding="10">
                            <Button FontSize="20" Padding="10" Content="18/01/2018" HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>
                        <Border>
                            <Button FontSize="20" Padding="10" Content="17/01/2018" HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>
                        <Border Padding="10">
                            <Button FontSize="20" Padding="10" Content="16/01/2018" HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>
                        <Border>
                            <Button FontSize="20" Padding="10" Content="14/01/2018"  HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>
                        <Border Padding="10">
                            <Button FontSize="20" Padding="10" Content="13/01/2018"  HorizontalAlignment="Center"  Background="{x:Null}"/>
                        </Border>
                        <Border>
                            <Button FontSize="20" Padding="10" Content="12/01/2018"  HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>
                        <Border Padding="10">
                            <Button FontSize="20" Padding="10" Content="11/01/2018"  HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>
                        <Border>
                            <Button FontSize="20" Padding="10" Content="10/01/2018 " HorizontalAlignment="Center" Background="{x:Null}"/>
                        </Border>
                    </StackPanel>
                   
                </ListView>

            </RelativePanel>
        </ScrollViewer>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>

                    <!--VisualState to be triggered when window width is >=1400 effective pixels-->

                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1400" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                        <!--Widest possible layout moves some elements around to optimize for more available width 
                        and keeps SplitView pane always showing inline-->
                        <!--<Setter Target="MyCommandBar.Margin" Value="350,0,580,0" />-->

                        <!--<Setter Target="MyCommandBar.(RelativePanel.Below)" Value="CommandBarButton"/>-->


                        <!--<Setter Target="MyScrollViewer.(RelativePanel.Below)" Value="MyCommandBar"/>-->

                        <!--<Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />-->

                    </VisualState.Setters>
                </VisualState>
                <VisualState>

                    <!--VisualState to be triggered when window width is >=548 and <1400 effective pixels-->

                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="548" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--<Setter Target="MyCommandBar.Margin" Value="12" />-->
                        <!--<Setter Target="MyCommandBar.(RelativePanel.Below)" Value="CommandBarButton"/>-->
                        <Setter Target="MyScrollViewer.(RelativePanel.Below)" Value="MyCommandBar"/>


                        <!--<Setter Target="MySplitView.IsPaneOpen" Value="false" />

                        <Setter Target="Instructions.(RelativePanel.Below)" Value="BrowseButton"/>-->
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--<Setter Target="MyCommandBar.Margin" Value="12" />-->
                        <!--<Setter Target="MyCommandBar.(RelativePanel.Below)" Value="CommandBarButton"/>-->
                        <Setter Target="MyScrollViewer.(RelativePanel.Below)" Value="MyCommandBar"/>


                        <!--<Setter Target="MySplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="False" />-->

                        <!--<Setter Target="StackPanel.(RelativePanel.Below)" Value="MyCommandBar"/>-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>
